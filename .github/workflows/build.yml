name: Build
on:
  push:
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🏗 Install build dependencies
        run: |
          python -m pip install build --user
      - name: 🔨 Build a binary wheel and a source tarball
        run: |
          python -m build
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  pre-commit:
    name: 🧹 Pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🏗 Set up dev dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: 🚀 Run pre-commit
        run: |
          pre-commit run --all-files --show-diff-on-failure

  test:
    name: 🧪 Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 🏗 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🏗 Set up dev dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: 🚀 Run pytest
        run: |
          pytest

  publish-on-pypi:
    name: 📦 Publish tagged releases to PyPI
    if: github.event_name == 'release' && github.repository == 'OctoPrint/mkdocs-site-urls'
    needs:
      - build
      - pre-commit
      - test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 📦 Publish to index
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_token }}
